# -*- coding: utf-8 -*-
"""UAS-AI

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1J9y7cyD3-p7RLgF5T1WSv5MaDiCapkSK
"""

import numpy as np
import pandas as pd

df=pd.read_csv('bill_authentication.csv')
df.head()

df.shape

# Split features and labels
X=df.drop('Class', axis=1)
y=df['Class']

# Train test split
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X,y, train_size = 0.8, random_state=13)

# Decision Tree Model
# Train the model
from sklearn.tree import DecisionTreeClassifier
model = DecisionTreeClassifier(
    criterion = 'gini',
    splitter = 'best'
)
model.fit(X_train, y_train)

# Tree plotting
from matplotlib import pyplot as plt
from sklearn import tree
plt.figure(figsize=(40,30))
tree.plot_tree(
    model,
    feature_names=['Variance','Skewness', 'Curtosis', 'Entropy'],
    class_names = ['Not authentic','Authentic'],
    filled = True
)
plt.show()

# Model prediction
y_pred = model.predict(X_test)

#Model evaluation
from sklearn.metrics import confusion_matrix,classification_report, accuracy_score, ConfusionMatrixDisplay
acc = accuracy_score(y_pred,y_test)
cm = confusion_matrix(y_test,y_pred)
cm_display = ConfusionMatrixDisplay(confusion_matrix = cm)

# Demo the evaluation
print('Accuracy:',acc)
print(classification_report(y_test,y_pred))
cm_display.plot()
plt.show()